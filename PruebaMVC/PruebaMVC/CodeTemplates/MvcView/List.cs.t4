<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>

<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="card">
                
    <div class="card-header">
                Esdra la queremos ♥ <3
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col">
                <table class="table" id="example">
                    <tr>
                <#
                IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
                foreach (PropertyMetadata property in properties) {
                    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
                #>
                <#
                        // We do not want to show any association properties for which there is
                        // no associated foreign key.
                        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                            continue;
                        }
                #>
                        <th>
                            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
                        </th>
                <#
                    }
                }
                #>
                        <th>Detalles</th>
                        <th>Editar</th>
                        <th>Borrar</th>
                    </tr>
                
                @foreach (var item in Model) {
                    <tr>
                <#
                foreach (PropertyMetadata property in properties) {
                    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
                #>
                <#
                        // We do not want to show any association properties for which there is
                        // no associated foreign key.
                        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                            continue;
                        }
                #>
                        <td>
                            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
                        </td>
                <#
                    }
                }
                
                string pkName = GetPrimaryKeyName();
                if (pkName != null) {
                #>
                        <td>
                        @Html.ActionLink("Detalles", "Details", new { id=item.<#= pkName #> }, new { @class="btn btn-block btn-info" })
       
                        </td>
                        <td>
                        @Html.ActionLink("Editar", "Edit", new { id=item.<#= pkName #> }, , new { @class="btn btn-block btn-warning"})
        
                        </td>
                        <td>
                        @Html.ActionLink("Borrar", "Delete", new { id=item.<#= pkName #> } , new { @class="btn btn-block btn-danger"})
                        </td>
                    <#
                    } else {
                    #>

                        <td>
                        @Html.ActionLink("Detalles", "Details", new { /* id=item.PrimaryKey */ } , new { @class="btn btn-block btn-info"})
       
                        </td>
                        <td>
                        @Html.ActionLink("Editar", "Edit", new { /* id=item.PrimaryKey */ }, new { @class="btn btn-block btn-warning"})
        
                        </td>
                        <td>
                        @Html.ActionLink("Borrar", "Delete", new { /* id=item.PrimaryKey */ } , new { @class="btn btn-block btn-danger"})
                        </td>
                           
                <#
                }
                #>
                    </tr>
                }
                
                </table>
            </div>
        </div>
    </div>

</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>